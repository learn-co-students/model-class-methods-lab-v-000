quit
where(name: 'Captain Cook' AND admiral: true)
where(name: 'Captain Cook')
all.where("name = 'Captain Cook'")
all.where("name = 'Captain Cook')
where("name = 'Captain Cook')
quit
joins(boats: :classifications).where(classifications: { name: ['Sailboat','Motorboat'] }).select("captains.*").distinct
quit
joins(boats: :classifications).where(classifications: { name: 'Sailboat' }).select("captains.*")
quit
quite
all.collect do |captain|
all[0].boats[0]
all[0].boats
all[0]
all
Boat.catamarans[0].name
Boat.catamarans[0]
Boat.catamarans
self.all[0].boats
self.all[0]
boats
self.boats
quit
joins(:classifications).group("boats.id").having("COUNT(*) = 3").select("boats.*")
quit
quite
self.includes(:boats).where('classifications.name = ?', 'Catamaran').references(:boats)
self.includes(:boats).where("classification = 'Catamaran'").references(:boats)
self.includes(:boats).where("classifications = 'Catamaran'").references(:boats)
self.includes(:boats).where("length >= '20'").references(:boats)
self.includes(:boats).where("length >= '20'")
self.includes(:boats)
self.all
self
self.includes(:boats).where('boats.classifications = ?', 'catamaran').references(:boats)
quit
self.includes(:classifications).where('classifications.count > ?', '1').references(:classifications)
self.includes(:classifications).where('classifications.length > ?', '1').references(:classifications)
self.includes(:classifications)
self.includes(:classifications).where('classifications.size > ?', '1').references(:classifications)
self.includes(:classifications).where('classification.size = 3').references(:classifications)
self.includes(:classifications).where('classifications.size = 3').references(:classifications)
self.includes(:classifications)
self.includes(:classifications).where('classifications.size = 3').references(:classifications)
self.select(:classifications)
self.all.select { |m| m.classifications > 2 }
Model.all.select { |m| m.field == value }
self.all.where("classifications.size > '2'")
self.all.where("classifications.size > '2')
self.includes(:classifications).where('classifications.name = ?', 'Sailboat').references(:classifications)
self.where(classification: 'Sailboat')
self.where(classification: nil)
self.where("classifications.size > '2'")
clear
  self.includes(:classifications).where('classifications.name = ?', 'Sailboat').references(:classifications)
self.includes(:classifications).where('classifications.size > 3').references(:classifications)
self.all[0].classifications.size
self.where("classifications.size > '2'")
self
self.classifications
self.where("classifications.size = '3'")
self.where("classifications = '3'")
self.having('classifications.size = 3').group('name')
self.includes(:classifications).where('classifications.size = 3').references(:classifications)
  self.includes(:classifications).where('classifications.size = ?', 3).references(:classifications)
self.includes(:classifications).where('classifications.size = 3').references(:classifications)
self.includes(:classifications).where('classifications.size => ?', '3').references(:classifications)
quit
  self.includes(:classifications).where('classifications.name = ?', 'Sailboat').references(:classifications).size
self.all.size
self.all
self.includes(:classifications).where('classifications.name = ?', 'Sailboat').references(:classifications)
    end
      boat.classifications.where(classification: 'Sailboat')
self.all.map do |boat|
self.all.collect do |boat|
self.all
  self.all.map do |boat|
self.where(captain: nil)
Boat.all[1].classifications
Boat.all[1]
Boat.all
Boat.all.classifications
self.all.group(:classifications)
self.all.group(:name)
self.all(iterate over each clasification and if the name is "sailboat" collect it 
self.all[0].classifications[0].name
self.all[0].classifications[0]
self.all[0].classifications
self.all[0].classification
self.all[0].categories
self.all[0].category
self.all[0]
self.all
self.all.where("category = 'sailboat' ")
self.all.where("category = "sailboat")
self.where(classifications
self.where(classifications: ['sailboats'])
self.where(classifications: 'sailboats')
self.where(classifications: 'sailboat')
self.where(classifications: sailboats)
self.where(classifications: sailboat)
self.where(classifications: sailboats)
all_boats[0].classifications
all_boats[0].classification
all_boats[0]
all_boats
all_boats = self.all
self.all
self
self.captain
self.boat_classifications
self.classifications
self.classification
self.category
self
quit
self.where(captain: nil)
self.where("captain = 'NULL'")
self.where("captain = 'nil'")
self.where("captain = 'nil')
self.where("captain = nil")
self.order(name: :desc).limit(3)
self.all.select { |m| m.captain == nil }
self.having('captain = nil ').group('name')
self.having('captain = 'nil' ').group('name')
self.having('captain = 'nil').group('name')
self.where("captain = 'nil'")
self.includes(:captain)
self.order(name: :desc).limit(3)
self.all.select { |m| m.captain == nil }
self.all.select()
self.select()
self.all.select { |m| m.captain == nil }
self.where("captain = '' ")
self.where("captain = "")
self.where("captain_id = nil")
self.where("captain_id = 'nil'")
self.where("captain = 'nil'")
self.order(name: :desc).limit(3)
self.all.select { |m| m.captain == nil }
quit
self.all.select { |m| m.captain == nil }
quit
boat[0]
boat[0[
boat.class
boat = self.select(:captain)
boat = self.select(:captain)[0]
boat.captain
boat.name
boat = self.select(:captain)
self.select(:captain)
quit
self.order(name: :desc).limit(3)
self.order(name: desc).limit(3)
self.order(:name).limit(1)
self.order(:name)
quit
self.where("length < '20'")
quit
self.limit(1)
Boat.limit(5)
Boat.limit(1)
Boat.limit(10)
Boat.all.size
Boat.all
User.all
self
params
